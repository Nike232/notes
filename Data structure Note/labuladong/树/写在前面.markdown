## 【树】的视角以及两种思维来理解递归

### 从树的视角来理解递归

其实就是将整个问题想象成树状结构

* 斐波拉契数列，如何求f(5)只要求出f(4)和f(3)，如何求f(4).....这样不断下去构成树的结构
* 全排列，如何求123的全排列，先固定一个数1或者2或者3，然后在1下面固定2或者3......

### 分解问题的思维模式

以上例子中的斐波拉契数列就是典型，将现在的问题分解为更小的问题。『树上一共有多少片叶子？——一片和其他所有片叶子』，一直分解到最小的情况，小到我们可以直接得出答案，剩下的就是返回答案了

**这种情况下，常常每个节点有一个特殊值，通过特殊值的关系构建函数，也就是函数是带返回值的**

### 遍历的思维模式

全排列问题就是遍历的思维模式，从前到后一个一个地加进去

**在这种情况下，常常是没有返回值的，我们需要在遍历的过程中去收集结果**

### 解题

1、首先，这个问题是否可以抽象成一棵树结构？如果可以，那么就要用递归算法了。

2、如果要用递归算法，那么就思考「遍历」和「分解问题」这两种思维模式，看看哪种更适合这个问题。

3、如果用「分解问题」的思维模式，那么一定要写清楚这个递归函数的定义是什么，然后利用这个定义来分解问题，利用子问题的答案推导原问题的答案；如果用「遍历」的思维模式，那么要用一个无返回值的递归函数，单纯起到遍历递归树，收集目标结果的作用。